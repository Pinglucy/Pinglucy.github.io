<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java</title>
      <link href="/2023/04/18/sqlserver/"/>
      <url>/2023/04/18/sqlserver/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-基础语法"><a href="#Java-基础语法" class="headerlink" title="Java 基础语法"></a>Java 基础语法</h2><h4 id="1、java-向下取整，向上取整，四舍五入取整"><a href="#1、java-向下取整，向上取整，四舍五入取整" class="headerlink" title="1、java 向下取整，向上取整，四舍五入取整"></a>1、java 向下取整，向上取整，四舍五入取整</h4><p>​ 1）四舍五入 Math.round()</p><p>​ <strong>可以使用 Math.round 函数进行小数位数的控制输出</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//主要用到Math类的round函数</span><span class="token keyword">double</span> d <span class="token operator">=</span><span class="token number">500</span><span class="token operator">/</span><span class="token number">3.0</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>d<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保留三位小数</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>​ 2）向上取整 Math.ceil()</p><p>​ 3）向下取整 Math.floor()</p><h4 id="2、控制输出小数精度"><a href="#2、控制输出小数精度" class="headerlink" title="2、控制输出小数精度"></a>2、控制输出小数精度</h4><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.1f "</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>sum<span class="token operator">/</span><span class="token punctuation">(</span>n<span class="token operator">/</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//f后面是一个空格</span><span class="token comment" spellcheck="true">//可以通过printf直接控制小数位数</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.6f\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>sum<span class="token operator">/</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token punctuation">(</span>n<span class="token operator">/</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//f后面是一个换行符</span></code></pre><h4 id="3、控制有效位数的输出"><a href="#3、控制有效位数的输出" class="headerlink" title="3、控制有效位数的输出"></a>3、控制有效位数的输出</h4><pre class=" language-java"><code class="language-java">BigDecimal b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BigDecimal divisor <span class="token operator">=</span> BigDecimal<span class="token punctuation">.</span>ONE<span class="token punctuation">;</span>MathContext mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MathContext</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保留6位有效位数</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>divisor<span class="token punctuation">,</span>mc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="4、数字与字符之间的转换"><a href="#4、数字与字符之间的转换" class="headerlink" title="4、数字与字符之间的转换"></a>4、数字与字符之间的转换</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * charAt（i）方法是指去字符串中指定位置的字符，i从0开始 * 这里要注意的是：由于字符char存储到内存中是存储字符的ASCII码， * 例如字符‘0’的ASCII码是48， * ASCII与数字字符本身代表的值的转换关系是：数字字符-‘0’的ASCII=数字字符本身代表的值 * input  0-670-82162-4 * 比如：如下 s.charAt(2)-'0'为 '7'-'0'=7(结果7类型为数值) */</span></code></pre><h4 id="5、将数字转换为字符串"><a href="#5、将数字转换为字符串" class="headerlink" title="5、将数字转换为字符串"></a>5、将数字转换为字符串</h4><p>String.valueOf(int i) 将 int 变量 i <strong>转换成字符串</strong></p><h4 id="6、由-String-转换成-数字的基本数据型态"><a href="#6、由-String-转换成-数字的基本数据型态" class="headerlink" title="6、由 String 转换成 数字的基本数据型态"></a>6、由 String 转换成 数字的基本数据型态</h4><p><strong>byte :</strong><br>Byte.parseByte(String s) : 将 s 转换成 byte<br><strong>double :</strong><br>Double.parseDouble(String s) : 将 s 转换成 double<br><strong>float :</strong><br>Double.parseFloat(String s) : 将 s 转换成 float<br><strong>int :</strong><br>Integer.parseInt(String s) : 将 s 转换成 int<br><strong>long :</strong><br>Long.parseLong(String s)</p><h4 id="7、next-与-nextLine-混用"><a href="#7、next-与-nextLine-混用" class="headerlink" title="7、next()与 nextLine()混用"></a>7、next()与 nextLine()混用</h4><pre class=" language-java"><code class="language-java">Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你的年龄： "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//空格或回车作为结束</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"年龄： "</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入的爱好: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String like <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爱好: "</span><span class="token operator">+</span>like<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时 nextLine()读取的是 nextInt()的回车换行符，导致无法输入爱好的内容。<br>解决办法:添加 sc.nextLine();如下：</p><pre class=" language-java"><code class="language-java">Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你的年龄： "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//空格或回车作为结束</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"年龄： "</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//important</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入的爱好: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String like <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"爱好: "</span><span class="token operator">+</span>like<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/17/hello-world/"/>
      <url>/2023/04/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
